<templateSet group="Custom Typescript">
  <template name="idc" value="// IDataCodee implementation&#10;static createFromCoder(coder: DataCoder): $TYPE$ {&#10;    const obj = new $TYPE$();&#10;    obj.decodeProperties(coder);&#10;    return obj;&#10;}&#10;&#10;readonly typeName: string = '$NAME$';&#10;&#10;encodeProperties(coder: DataCoder) {&#10;    super.encodeProperties(coder);&#10;    $END$&#10;}&#10;&#10;decodeProperties(coder: DataCoder) {&#10;    super.decodeProperties(coder);&#10;}" description="IDataCodee" toReformat="false" toShortenFQNames="true" deactivated="true">
    <variable name="TYPE" expression="" defaultValue="CodeeType" alwaysStopAt="true" />
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="plur" value="import * as $NAME$ from './$NAME$';" description="" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="tplur" value="import * as $NAME$ from './Tracks/$NAME$';" description="" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="uplur" value="import * as $NAME$ from '../$NAME$';" description="" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ens" value="if (!this.document || !this.scene) {&#10;    throw noDocumentError('$FN_NAME$');&#10;}&#10;const doc = this.document;&#10;const sceneId = this.scene.id;" description="" toReformat="true" toShortenFQNames="true" deactivated="true">
    <variable name="FN_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
      <option name="TS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="fb" value="import $NAME$ from 'fbjs/lib/$NAME$';&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="dd" value="ctx: AsyncContext | undefined," shortcut="SPACE" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="jj" value="NO_CTX," shortcut="SPACE" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="ff" value="ctx," shortcut="SPACE" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>